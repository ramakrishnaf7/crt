'''

Count Inversions


Problem statement
For a given integer array/list 'ARR' of size 'N' containing all distinct values, find the total number of 'Inversions' that may exist.

An inversion is defined for a pair of integers in the array/list when the following two conditions are met.

A pair ('ARR[i]', 'ARR[j]') is said to be an inversion when:

1. 'ARR[i] > 'ARR[j]' 
2. 'i' < 'j'

Where 'i' and 'j' denote the indices ranging from [0, 'N').
Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= N <= 10^5 
1 <= ARR[i] <= 10^9

Where 'ARR[i]' denotes the array element at 'ith' index.

Time Limit: 1 sec
Sample Input 1 :
3
3 2 1
Sample Output 1 :
3
Explanation of Sample Output 1:
We have a total of 3 pairs which satisfy the condition of inversion. (3, 2), (2, 1) and (3, 1).
Sample Input 2 :
5
2 5 1 3 4
Sample Output 2 :
4
Explanation of Sample Output 1:
We have a total of 4 pairs which satisfy the condition of inversion. (2, 1), (5, 1), (5, 3) and (5, 4).


Code:


'''

from os import *
from sys import *
from collections import *
from math import *

c = 0
def ms(arr,left,right):
    if left >= right:
        return
    mid = (left + right)//2
    ms(arr,left,mid)
    ms(arr,mid+1,right)
    merge(arr,left,mid,right)
    

def merge(arr,left,mid,right):
    global c
    t = []
    i = left
    j = mid + 1
    while i <= mid and j <= right:
        if arr[i] < arr[j] :
            t.append(arr[i])
            i += 1
        else:
            t.append(arr[j])
            c += mid - i + 1
            j += 1
    while i<= mid:
        t.append(arr[i])
        i += 1
    while j <= right:
        t.append(arr[j])
        j += 1
    for i in range(left,right+1):
        arr[i] = t[i - left]

def getInversions(arr, n) :
	# Write your code here.
    ms(arr,0,n-1)
    return c

# Taking inpit using fast I/O.
def takeInput() :
    n = int(input())
    arr = list(map(int, stdin.readline().strip().split(" ")))
    return arr, n

# Main.
arr, n = takeInput()
print(getInversions(arr, n))